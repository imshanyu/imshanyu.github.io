<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>产品经理小技巧（一）—— 如何和开发人员沟通</title>
      <link href="/2020/01/22/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%B0%8F%E6%8A%80%E5%B7%A7%E2%80%94%E2%80%94%E5%A6%82%E4%BD%95%E5%92%8C%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%B2%9F%E9%80%9A/"/>
      <url>/2020/01/22/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%B0%8F%E6%8A%80%E5%B7%A7%E2%80%94%E2%80%94%E5%A6%82%E4%BD%95%E5%92%8C%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%B2%9F%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<p>作为一名产品经理，与技术人员沟通是其工作内容的重要组成部分，但是沟通的过程却常常产生激烈的思想碰撞。很多时候因为沟通遇到的问题产品经理会觉得技术人员是“不可沟通”的，技术人员会觉得产品经理“不可理瑜”的。那么如何避免矛盾、高效沟通呢？笔者结合了自己的工作实际，总结了以下几点。<br><a id="more"></a></p><h3 id="1-讲述需求背景"><a href="#1-讲述需求背景" class="headerlink" title="1. 讲述需求背景"></a>1. 讲述需求背景</h3><blockquote><p>在向开发人员讲述功能需求的时候，经常会被开发人员提问“这个功能解决了什么问题，有什么意义？”、“这个需求的背景是什么？”，或者之间就说“我现在没时间”。因此我们在跟技术沟通需求的时候，要讲明我们要做的功能都目的、意义、用户的使用场景以及，这样能让开发人员更加理解需求，能够激发开发的主观能动性，主动找出方案的不足，去维护相关功能，让其拥有更好的扩展性。</p></blockquote><h3 id="2-提前和开发确认设计方案的技术可行性"><a href="#2-提前和开发确认设计方案的技术可行性" class="headerlink" title="2. 提前和开发确认设计方案的技术可行性"></a>2. 提前和开发确认设计方案的技术可行性</h3><blockquote><p>在技术需求评审时有时候会被开发人员怼“这个需求实现不了”、“这样做太复杂了，短时间内完不成”，因此我们可以在需求细化之前，找开发人员沟通方案的可行性，听取技术同学的建议，找到最合理的需求解决方案。</p></blockquote><h3 id="3-详细的描述需求，避免遗漏"><a href="#3-详细的描述需求，避免遗漏" class="headerlink" title="3.  详细的描述需求，避免遗漏"></a>3.  详细的描述需求，避免遗漏</h3><blockquote><p>在技术需求评审的时候有时候会被开发提问“这个字段的限制字符数是多少？”、“超过字符数了，如何显示？”、“报错了，如何提示？”，这些都是需求的细节，因此我们在文档上要把需求的“业务规则、字段说明、前置/后置条件、涉及用户角色”等细节描述清楚，这样能够很多沟通上的问题。</p></blockquote><h3 id="4-及时同步人员，及时更新文档"><a href="#4-及时同步人员，及时更新文档" class="headerlink" title="4. 及时同步人员，及时更新文档"></a>4. 及时同步人员，及时更新文档</h3><blockquote><p>在项目过程中不可避免的会补充需求说明，进行需求变更，但是有时候因为相关人员没有同步到位，进而出现前后端、安卓端与IOS端的实现不一致导致测试人员提bug，设计人员没有更新UI稿导致前端实现错误等一系列问题。因此产品经理在进行需求变更、补充需求说明时一定要及时通知涉及到的设计人员、开发人员、测试人员，同时更新原型、需求说明、UI设计稿。需求变更时要以“邮件+口头通知/即时消息”的形式通知相关人员，同时要把需求变更记录到项目文档中。</p></blockquote><h3 id="5-避免口语化沟通，尽量说术语"><a href="#5-避免口语化沟通，尽量说术语" class="headerlink" title="5. 避免口语化沟通，尽量说术语"></a>5. 避免口语化沟通，尽量说术语</h3><blockquote><p>在沟通的过程中讲技术术语，能够让技术人员迅速的理解需求，不会轻视产品经理。产品经理懂技术术语能够帮助产品理解技术人员的描述。口语化的描述往往会造成误解。</p></blockquote><h3 id="6-和技术负责人沟通"><a href="#6-和技术负责人沟通" class="headerlink" title="6. 和技术负责人沟通"></a>6. 和技术负责人沟通</h3><blockquote><p>在评估工时时，产品经理可能会觉得技术人员评估的工时不合理。出现紧急bug时，技术人员不配合进行修复。遇到这些问题的时候，我们要学会和相应的技术负责人沟通，或者向领导反映，让领导和相关技术负责人沟通问题。</p></blockquote><h3 id="7-切换测试环境、上线要通知相关开发人员"><a href="#7-切换测试环境、上线要通知相关开发人员" class="headerlink" title="7. 切换测试环境、上线要通知相关开发人员"></a>7. 切换测试环境、上线要通知相关开发人员</h3><blockquote><p>项目上线需要开发人员提交代码到正式环境，产品经理在上线验收无误后，要通知开发人员发版，避免出现开发不知道提交代码，影响正常的测试或上线。</p></blockquote><p>与技术沟通其实做到全面、准确、及时，就能够避免大多数矛盾。产品经理提升自身的技术素养，能够促进沟通、加强理解。总之和开发人员的沟通要相互理解，相互支持，才能够把项目做好。</p>]]></content>
      
      
      <categories>
          
          <category> 产品管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品经理 </tag>
            
            <tag> 开发人员 </tag>
            
            <tag> 沟通协调 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对软件外包项目中甲方外包管理的思考（一）——人员外包和项目外包</title>
      <link href="/2019/06/07/%E5%AF%B9%E8%BD%AF%E4%BB%B6%E5%A4%96%E5%8C%85%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%B2%E6%96%B9%E5%A4%96%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E4%BA%BA%E5%91%98%E5%A4%96%E5%8C%85%E5%92%8C%E9%A1%B9%E7%9B%AE%E5%A4%96%E5%8C%85/"/>
      <url>/2019/06/07/%E5%AF%B9%E8%BD%AF%E4%BB%B6%E5%A4%96%E5%8C%85%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%B2%E6%96%B9%E5%A4%96%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E4%BA%BA%E5%91%98%E5%A4%96%E5%8C%85%E5%92%8C%E9%A1%B9%E7%9B%AE%E5%A4%96%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>在软件外包项目中，甲方（发包商）通过资金或其它资源获取乙方（承包商）的开发服务，以达成其软件需求目标。为了让外包项目按时按质按量完成，甲方需要做好项目的<strong>采购管理</strong>、<strong>外包管理</strong>，其中采购管理的核心是选择合适的供应商、签订合同，外包管理的核心是过程监控、项目验收。按照外包项目采用的形式和管理方法的不同，可以将外包项目分为<strong>项目外包</strong>、<strong>人员外包</strong>[1]。<br><a id="more"></a></p><ul><li><p>项目外包</p><blockquote><p>甲方将项目的需求和范围要求发给乙方，候选乙方对此进行报价，然后进行实地考察和分析确认，当甲方认为乙方符合承担条件后，将项目需求和技术资料发给乙方，进行软件开发[1]。项目研发过程涉及的需求、设计、编码、测试、上线、系统支持等项目活动全部由乙方承担。项目外包适合缺少相关专业人员的甲方。</p></blockquote></li><li><p>人员外包</p><blockquote><p>甲方负责项目的组织和管理，雇佣乙方的相关人员参与项目研发的中间环节。常见的人员外包的形式是雇佣乙方的开发人员进行编码工作，人员外包适合拥有具备需求分析、项目管理、技术管理等相关能力的专业人员的甲方。</p></blockquote></li></ul><p>近期笔者以甲方项目负责人的身份参与我司一个内部系统的外包项目，项目前期以”项目外包”的形式进行，后期以”人员外包”的形式进行。在本文中笔者将结合项目经历对项目外包、人员外包中外包管理的异同、注意要点进行简要的说明。</p><h2 id="二、项目外包"><a href="#二、项目外包" class="headerlink" title="二、项目外包"></a>二、项目外包</h2><p>笔者在接手项目时, 项目已经进入开发阶段。获取到的项目资料仅仅只是短短几句的项目文档、项目外包合同。通过对业务进行调研，和业务人员沟通，阅读相关文档发现该项目在的规划、需求阶段存在着很大的不足，进而导致了很严重的项目后果。通过对该阶段项目进行复盘，笔者认为在<strong>项目立项</strong>、<strong>项目规划</strong>、<strong>需求分析</strong>、<strong>项目验收</strong>阶段甲方的外包项目管理需要注意以下几点：</p><h3 id="1-明确项目干系人"><a href="#1-明确项目干系人" class="headerlink" title="1. 明确项目干系人"></a>1. 明确项目干系人</h3><blockquote><p><strong>什么是项目干系人？</strong>：</p><p>项目干系人又称项目利益相关者，是指积极参与项目实施或完成的，或其利益可能受项目实施或完成情况产生积极或消极影响的个人或组织（如客户、发起人、执行组织或公众）,识别干系人是一个持续性的过程[2]。通常参与项目的角色有项目发起人、项目业务方、项目经理、设计人员、开发人员、测试人员等，受项目影响的角色有成果拥有者、系统使用者等。</p></blockquote><p>在本次的项目过程中，由于在项目规划阶段漏掉了一个重要的业务方，而且笔者因为缺乏干系人的资料导致没有及时干涉，进而导致了项目成果不能满足所有业务方的需要。因此<code>在项目规划阶段明确干系人的人员组成、优先级、期望点，是保障项目定位、需求来源的准确性的必要途径，是进入项目需求阶段的基础</code>。</p><h3 id="2-合理的项目团队组织"><a href="#2-合理的项目团队组织" class="headerlink" title="2. 合理的项目团队组织"></a>2. 合理的项目团队组织</h3><p>项目团队组织包括人员安排、任务划分、沟通协作项目确认。合理项目团队组织能够明确人员职责，监控项目进程，及时发现问题，降低项目进度和质量失控的风险。在笔者没有介入该项目的前期，乙方项目经理直接和业务需求人员进行沟通，由于业务需求人员缺乏专业知识，导致需求设计不完善、项目节点不合理、项目资源提供不及时等诸多问题。同时在整个项目过程中缺乏正式有效沟通协调机制，导致对进度没有清晰的掌控，无法确认乙方是否充分投入资源。因此笔者认为合理的项目组织需要做到以下几点：</p><ul><li><p>安排专业人员作为项目对接人</p><blockquote><p>合格的项目对接人需要了解软件开发知识，熟悉项目开发流程，善于交流，又了解业务知识。项目对接人负责对软件外包项目全过程进行全面的监控和协调，以期更好地消除由于信息不对称所产生的一系列项目进度和质量风险，确保软件外包各方能够更有效地履行合同[3]。</p></blockquote></li><li><p>建立项目进度跟踪机制</p><blockquote><p>建立项目进度跟踪机制的目的是监督外包项目的进展情况，确认项目实际进度与合同规定的时间进度表是否相符，评估乙方投入的开发资源是否充分。项目进度跟踪通常以会议、邮件、即时聊天等约定的交流形式定期检查，频率至少1周一次。通过乙方定期提供的项目相关信息，来确认阶段任务完成情况、总结项目问题，检查实际进度是否延迟，评估项目进行的风险，并讨论相关解决方案。</p></blockquote></li></ul><h3 id="3-不可忽视项目的非功能需求"><a href="#3-不可忽视项目的非功能需求" class="headerlink" title="3. 不可忽视项目的非功能需求"></a>3. 不可忽视项目的非功能需求</h3><p>   非功能需求是系统需求的重要组成部分，是影响用户使用体验、产品能否提供高效稳定服务的关键。常见的非功能需求包括性能需求、安全需求、集成需求、可靠性需求、兼容性需求、易用性需求等。在本次外包项目过程中，由于忽略了非功能需求导致了多个项目失误，比如管理后台没有对接单点登录，同时在线用户过多服务器瘫痪，因此在项目规划时不能忽视对非功能需求的需求分析。然而非功能的定义很抽象，如何清晰准确的描述非功能需求是非功能需求分析的关键。通常对于非功能需求的描述是通过量化业务指标、详细具体的规则进行说明，常用到的如下：</p><ul><li><p>性能需求</p><blockquote><p>对于前台的系统而言，通常以“响应时间”上进行定义，并具体到的某个业务场景[4]。需求描述举例如下[5]：</p><ul><li>定位系统从点击到第一个界面显示出来所需要的时间不得超过300毫秒。</li><li>在非高峰时间根据编号和名称特定条件进行搜索，可以在3秒内得到搜索结果。</li></ul><p>对于后台的业务管理系统来说，通常以“整体能力上来定义”，并具体到某个业务场景[4]。常见的业务指标包括“并发量、资源使用率、业务量、系统容量”等等[4]。需求描述举例如下[5]：</p><ul><li>系统可以同时满足10,000个用户请求，并为25,000个并发用户提供浏览功能。</li><li>CPU占用率&lt;=50%，内存占用率&lt;=50%。</li><li>数据库表行数不超过100万行，数据库最大容量不超过1000GB，磁盘空间至少需要40G以上。</li></ul></blockquote></li><li><p>可扩展性需求</p><blockquote><p>系统的可扩展性就是考虑系统未来为了追加新功能是否方便，便宜，能够满足未来业务量增长的需要。定义扩展性需求时要确定系统的生命周期，然后分析在系统生命期内，业务量变化情况，压力增长情况，以此分析出来的结果，作为扩展性需求，进行定义[4]。系统可扩展可以从系统性能、系统功能两个方面进行考虑，其基本要求是功能扩展时不需要对系统的基础架构进行改动，性能扩展不通过任何代码的更改。在描述系统性能的可扩展需求时应结合性能需求，举例如下：</p><ul><li>系统可以在未来需要的情况下，不通过任何代码的更改，对系统性能进行提升，使之中心系统每秒钟能记录25个以上的考勤记录[4]。</li></ul><p>系统功能的可扩展性体现在需求分析与设计阶段是否能有效识别系统可变的需求，不能停留在可扩展的基本原则上，要落实对一个一个功能的分析中，以提供出合理的方案[6]。从业务设计的角度来说，模块化、可复用、较少依赖或耦合是可扩展的原则。</p></blockquote></li><li><p>集成需求</p><blockquote><p>企业内部系统存在多个业务系统，系统之间集成和整合的需求就是集成需求。集成需求主要包括数据对接（系统之间的数据交换和信息传递）、单点登录（多个独立系统统一账号和登录认证）、系统融合（  将多个系统融合在一个系统中，统一账号、权限、应用的管理，最终以一个独立的软件系统存在）[7]。需求描述举例如下：</p><ul><li>某某图书管理系统采集##库存管理系统的数据包括库存数据、订单数据。</li><li>某某课程管理系统通过与EHR系统实施集成，实现相关基础数据（组织机构、用户数据等）的共享，实施统一身份认证和统一登录界面。</li><li>内训管理后台融合到社区管理后台中，统一账号、权限、功能的管理。</li></ul></blockquote></li><li><p>兼容性需求</p><blockquote><p>一般对于前台系统而言，都需要考虑其兼容性。目前最为广泛的前台系统是手机客户端、web端，在考虑系统的兼容性时主要前台的适用平台有哪些，需求描述举例如下。</p><ul><li>系统仅支持chrome浏览器，不考虑移动端适配。</li><li>移动端需要兼容的操作系统IOS6以上、Andriod6.0以上。</li></ul></blockquote></li><li><p>易用性需求</p><blockquote><p>易用性和产品的用户体验相关，是一组规定或者潜在的用户为使用其软件所需做的努力和对这样的使用所作的评价有关的一组属性[8]。衡量易用性的标准是用户对于系统功能是否容易理解、是否容易学习、是否容易操作，需求描述举例如下：</p><ul><li>80%的用户经过培训后，可在5分钟内完成课程创建。</li><li>90％的用户完成建课后，需要在5s内知道下一步需要进行什么操作，如课程上线、编辑、查看详情等。</li></ul></blockquote></li></ul><h3 id="4-合理的项目里程碑安排"><a href="#4-合理的项目里程碑安排" class="headerlink" title="4. 合理的项目里程碑安排"></a>4. 合理的项目里程碑安排</h3><p>项目里程碑安排就制定项目计划，是对项目的进度管理、目标管理，是进度跟踪的关键。项目里程碑就是通过识别项目的软件活动，以软件活动完成时间节点作为项目里程碑。具体的项目计划安排由乙方产品经理负责，甲方需要进行评审，判断其合理性。<br>在此次项目中，由于项目的阶段划分、开发计划制定都没有进行严格的审核，项目过程虽然按照业务需求划分成两个阶段，但是没有做相关的阶段验收计划，因此笔者增加了项目阶段验收的环节。项目第一阶段的计划周期过短，中间有法定假日的影响，虽然乙方组织开发人员进行加班，但是只有web端完成，追赶进度的同时导致了严重的质量问题。由于移动端采用的技术方案是以SDK的形式嵌入公司的移动OA应用中，在项目集成过程中产生了严重的类库冲突问题，阻碍了项目进展。因此合理项目计划安排、计划实施过程中需要考虑以下几点：</p><ul><li><p>提前预估项目风险</p><blockquote><p>在进行项目规划的时候，要充分地平台项目进展过程中可能遇到的风险，针对这些风险制定相应的规避措施，对于容易产生风险的项目任务，需要预留充足的时间。</p></blockquote></li><li><p>项目任务的工期要符合项目开发实际</p><blockquote><p>在很多时候乙方为了中标会向甲方承诺工期，然而实际开发的结果往往会是不能按时交付、完成质量不能满足客户期望。因此对应甲方对接人在乙方完成需求分析后，根据需求规格说明书评审乙方的项目开发计划，如果发现不合理需让乙方调整，确认计划无误后须进行冻结。</p></blockquote></li><li><p>划分子项目</p><blockquote><p>对应涉及多终端、多业务需求的大型项目，可根据业务需求的优先级、系统终端类型，划分多个子项目进行多次验收多次交付，一个阶段没有完成不能进入下一阶段，项目通过多次迭代完成上线验收。采用这种方式能够降低项目风险，提高项目完成质量。</p></blockquote></li></ul><h2 id="三、人员外包"><a href="#三、人员外包" class="headerlink" title="三、人员外包"></a>三、人员外包</h2><p>在此次项目的人员外包阶段，外包的开发人员异地开发，因此项目过程中如何协调异地开发人员的开发工作，如果保证需求沟通中无阻碍，就是人员外包面临主要问题。复盘此次的项目经历，笔者认为人员外包需要注意以下几点：</p><p>###1. 和乙方项目经理沟通</p><blockquote><p>在项目过程中可能会出现外包人员工作配合度不高，需要安排外包人员加班处理某些任务等问题。遇到这些问题时首先要和乙方的项目经理进行沟通反应问题，或者在告知外包人员的同时告知乙方项目经理。</p></blockquote><p>###2. 统一的项目协作平台</p><blockquote><p>通过在线的项目协作平台，能够方便团队成员直接进行沟通，便于项目经理对项目任务协调和控制，同时记录项目需求、项目决策、需求变更等重要内容。笔者参与的外包项目采用的在线协作平台是wiki+redmine的形式，wiki记录项目需求、项目人员、项目里程碑、会议纪要等内容，redmine进行任务分配、任务跟踪、bug管理。</p></blockquote><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>软件项目外包管理涉及到很多流程，甲方从项目立项到选择承包商，再到签订合同、跟踪监控，最后成果验收，乙方从项目竞标到竞标成功 ，再到系统策划、需求分析、系统设计、编码测试，最后提交验收，整个项目从开始到收尾，甲方乙方其实是合作者，为了共同的项目目标而走到一起的，虽然整个过程中，难免会遇到很多问题，踩很多坑。<br>笔者结合自身的项目经验总结了一些要点，希望能对大家在进行外包项目能够有所帮助，减少弯路，其中难免会有不足之处，请大家批评指正。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] 杨曙贤, 王军辉和张爱国. 软件外包概论. 普通高等教育软件工程“十二五”规划教材. 人民邮电出版社, 2015.<br>[2]（美）项目管理协会．项目管理知识体系指南（PMBOK指南）第四版．北京：电子工业出版社，2009：23-24.<br>[3] 王梅源. 软件外包项目全过程风险管理. 华中科技大学出版社, 2009.<br>[4] <a href="https://wenku.baidu.com/view/b477eec3aa00b52acfc7cab8.html" target="_blank" rel="noopener">非功能需求定义与测试.百度文库, 2011.</a><br>[5] <a href="https://blog.csdn.net/dylanren/article/details/79215402" target="_blank" rel="noopener">常见非功能性需求的描述案例.CSDN博客, 2018.</a><br>[6] [我们应当怎样做需求分析：非功能需求.ITeye博客, 2012.]<br>(<a href="https://www.iteye.com/blog/fangang-1497941" target="_blank" rel="noopener">https://www.iteye.com/blog/fangang-1497941</a>)<br>[7] <a href="https://wenku.baidu.com/view/54114a9acf84b9d528ea7ade.html" target="_blank" rel="noopener">软件系统集成与整合的常见方式.百度文库, 2018.</a><br>[8] 电子工业部标准化研究所.GB/T 16260-1996 信息技术 软件产品评价 质量特性及其使用指南.</p>]]></content>
      
      
      <categories>
          
          <category> 软件外包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目外包 </tag>
            
            <tag> 人员外包 </tag>
            
            <tag> 外包管理 </tag>
            
            <tag> 软件外包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析互联网产品分类</title>
      <link href="/2018/08/16/%E6%B5%85%E6%9E%90%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%88%86%E7%B1%BB/"/>
      <url>/2018/08/16/%E6%B5%85%E6%9E%90%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%A7%E5%93%81%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>互联网产品是应用软件的一种，是基于网络应用技术为用户提供服务的交互式应用。其中常用网络应用技术是基于客户-服务器方式实现不同主机中的多个应用进程之间的通信和协同工作<a href="#index">[1]</a>，如web技术。不同应用会根据用户及其所服务的领域提供不同的功能。<br>互联网产品的分方法类有很多，总的来说是从<strong>应用、用户、服务</strong>三个角度出发对互联网产品进行分类。<br><a id="more"></a> </p><h2 id="二、应用"><a href="#二、应用" class="headerlink" title="二、应用"></a>二、应用</h2><p> 从应用角度出发，可以将应用的<strong>运行平台、网络结构模式</strong>作为分类方式。</p><h3 id="2-1-运行平台"><a href="#2-1-运行平台" class="headerlink" title="2.1 运行平台"></a>2.1 运行平台</h3><p>应用运行平台也称应用运行环境，总体上可以分为系统平台、开发平台、开放平台<a href="#index">[2]</a>, 本文主要讨论系统平台、开放平台。<br>应用可以按照系统平台的组成进行分类。系统平台包括硬件环境和软件环境，其中硬件环境是由计算机及其外围设备组成，软件环境主要包括操作系统、浏览器、软件框架、运行库等<a href="#index">[3]</a>。本文硬件环境只讨论终端设备，软件环境只讨论操作系统和浏览器</p><h4 id="2-1-1-终端设备"><a href="#2-1-1-终端设备" class="headerlink" title="2.1.1 终端设备"></a>2.1.1 终端设备</h4><p>与日常生活密切相关的终端设备主要有个人计算机、智能家居设备、车载智能终端、可穿戴设备 <a href="#index">[3]</a> 。个人计算机包括台式机（或称台式计算机、桌面电脑）、一体机、笔记本电脑、平板电脑、掌上计算机（PDA）、智能手机等。智能家居设备有智能电视/盒子、智能音箱等。可穿戴设备有智能手表、 智能眼镜、智能手环等。<br>应用依照其运行的终端设备进行分类，常用的有</p><ul><li><p><strong>PC端</strong></p><blockquote><p>运行在台式机、一体机、笔记本电脑上的应用，以及运行在wintel平板上的应用</p></blockquote></li><li><p><strong>移动端</strong></p><blockquote><p>移动终端设备广义上包括手机、平板电脑、PDA（工业级、消费品）等，但通常情况下是指手机<a href="#index">[3]</a>。因此移动端应用主要指运行在手机端的应用，即<strong>手机端</strong>。</p></blockquote></li><li><p><strong>Pad端</strong></p><blockquote><p>Pad即平板电脑，一般将运行在平板电脑且平板的操作系统为IOS或Android的应用称为Pad端，也称为<strong>HD版</strong></p></blockquote></li><li><p><strong>PDA</strong>端</p><blockquote><p>PDA包括消费级PDA和工业级PDA<a href="#index">[3]</a>。常见的工业级PDA有POS机、巴枪等，消费级PDA有智能手机、平板电脑等。一般将运行在工业级PDA设备上的应用称为PDA端。</p></blockquote></li><li><p><strong>TV端</strong></p><blockquote><p>运行在智能电视或电视盒子（机顶盒）设备上的应用称为TV端。</p></blockquote></li></ul><h4 id="2-1-2-操作系统、浏览器"><a href="#2-1-2-操作系统、浏览器" class="headerlink" title="2.1.2 操作系统、浏览器"></a>2.1.2 操作系统、浏览器</h4><p>操作系统按照其应用范围分类可以分为桌面操作系统、服务器操作系统、嵌入式操作系统、移动端操作系统。其中桌面操作系统分为Windows系统和类Unix系统（包括Mac OS、Linux发行版）。常用的嵌入式操作系统有嵌入式Linux、WinCE、VxWorks、uCOS等<a href="#index">[4]</a>。移动操作系统包括Android、IOS、WP、WM等。<br>浏览器是WEB应用的软件环境，按照浏览器内核分类可以分为：单内核浏览器（IE系列（IE内核）、火狐浏览器（Firefox内核）、Safari浏览器（Webkit内核）、Chrome浏览器（Blink内核）），多内核浏览器（360浏览器、猎豹浏览器、QQ浏览器等）<a href="#index">[4]</a>。网页或Web应用的开发会处于对应用场景、开发成本的考量在浏览器的兼容上进行取舍，比如说政务性的网站需要兼容IE浏览器，一些以微信公众号为入口的web应用只能在微信的内置浏览器内打开。<br>应用可以<strong>依照其运行设备所搭载的操作系统</strong>进行分类，常用的有：</p><ul><li><p><strong>桌面端</strong></p><blockquote><p>应用具有图形化用户操作界面，且所在的操作系统平台为桌面操作系统。<br>桌面端应用可以按具体的操作系统进行细分：<strong>Windows版</strong>、<strong>Mac版</strong>、<strong>Linux版</strong>。</p></blockquote></li><li><p><strong>Android端</strong></p></li><li><strong>IOS端</strong></li></ul><h3 id="2-2网络结构模式"><a href="#2-2网络结构模式" class="headerlink" title="2.2网络结构模式"></a>2.2网络结构模式</h3><p>B/S(Browse/Server)和C/S（Client/Server）是常见的网络架构模式。在Client/Server结构的系统中，应用程序分为客户端和服务器端两大部分；客户端部分为每个用户所专有，而服务器端部分则由多个用户共享其信息与功能；客户端部分通常负责执行前台功能，而服务器端部分执行后台服务<a href="#index">[3]</a>。在Browse/Server结构的系统中，客户端不需要安装专门的软件，只需要浏览器即可，浏览器通过Web Server 同数据库进行数据交互，可以方便在不同平台下工作；服务端可采用高性能计算机，服务器安装SQL Server、Oracle、MYSQL等数据库<a href="#index">[5]</a>。<br>应用可以依照B/S、C/S两种模式进行划分</p><ul><li><p><strong>客户端应用</strong></p><blockquote><p>即在本地有应用程序文件，能直接运行于当前操作系统，为用户提供本地服务的应用。客户端应用也称为“<strong>原生应用</strong>（Native APP（PS：APP一般指手机应用，但在本文中没有限定其范围））”。客户端应用可通过应用程序分发平台提供的也称为“<strong>StoreAPP</strong>（商店应用）”。<br>客户端应用可以进一步细分为：<strong>桌面客户端</strong>、<strong>移动客户端</strong>等</p></blockquote></li><li><p><strong>WEB应用</strong></p><blockquote><p>即通过web访问的应用程序，用户通过浏览器打开,并且可以跨平台使用。<br>web应用可以进一步细分为：<strong>桌面web</strong>（也称PCweb)、<strong>移动web</strong>。移动web应用俗称<strong>H5应用</strong></p></blockquote></li><li><p><strong>混合应用</strong></p><blockquote><p>即C/S模式和B/S模式相结合的，浏览器支持的语言和程序语言同时开发的应用。<br>混合应用（Hybrid APP）通常分为三种类型：多View混合型、单View混合型、Web主体性型。其中多View混合型为Native View和Web View独立展示，交替出现；单View混合型为在同一个View内，同时包含Native View和Web View；Web主体型为主体是WebView，主要以网页语言编写，穿插Native功能<a href="#index">[3]</a>。</p></blockquote></li></ul><h3 id="2-3-开放平台"><a href="#2-3-开放平台" class="headerlink" title="2.3 开放平台"></a>2.3 开放平台</h3><p>开放平台是指软件系统通过公开其应用程序编程接口（API）或函数（function）来使外部的程序可以增加该软件系统的功能或使用该软件系统的资源<a href="#index">[3]</a>。开放平台的开放类型主要有应用开放、login开放和数据开放，其中应用开放是指开放自身平台的各种标准接口，与第三方应用共享用户，共同服务；login开放是指降低用户进入第三方的注册门槛，同时也能圈住自己的核心用户群<a href="#index">[6]</a><br>；数据开放是在保护用户隐私前提下，开放用户基本数据、关系数据和行为数据，同第三方一起打造个性化、个人化、智能化、实时化的服务模式<a href="#index">[7]</a>。目前主流的开放平台有：百度开放平台、微信开放平台、淘宝开放平台、腾讯开放平台等。<br>本文主要讨论依托于开放平台的应用，即<strong>开放平台应用</strong>。目前最流行的开放平台应用是“小程序”。小程序的开发不仅仅可以调用开放平台的接口，其开发过程采用大量HTML5相关的技术，进一步降低了开发者的门槛，同时开放平台也提供了统一的开放工具。当前市场上具有代表性的小程序有：</p><ul><li><p><strong>微信小程序</strong></p><blockquote><p>即依托于微信作为平台运行的应用。它主要由HTML代码构成。得益于微信提供的API，它拥有比普通Web应用更多的权限，能够实现类似App的功用<a href="#index">[8]</a>。</p></blockquote></li><li><p><strong>智能小程序</strong></p><blockquote><p>即依托于手百APP作为平台运行的应用。相较于微信小程序的封闭生态，百度智能小程序是开放生态，其支持web化的解决方案，应用能够在百度系产品及所有浏览器上访问。</p></blockquote></li><li><p><strong>快应用</strong></p><blockquote><p>即九大手机厂商基于硬件平台共同推出的应用标准和平台。快应用框架深度集成进各厂商手机系统中，可以在操作系统层面实现用户需求与应用服务间的无缝连接，提升用户的使用体验和应用服务的转化效率，同时支持生成桌面图标等留存能力<a href="#index">[3]</a>。</p></blockquote></li></ul><h2 id="三、用户"><a href="#三、用户" class="headerlink" title="三、用户"></a>三、用户</h2><p>用户是应用所面向的用户群体，应用为用户提供相关问题的解决方案。对于应用而言，用户有两种关键角色：使用者（应用的直接用户）、决策者（决定是否使用应用）。<br>应用可以按照用户群体进行分类，如下：</p><ul><li><p><strong>C端</strong></p><blockquote><p>即面向个人消费者的应用。应用的使用者和决策者是一体的。</p></blockquote></li><li><p><strong>B端</strong></p><blockquote><p>即面向企业或组织的应用。应用的使用者和决策者并非一体的，其中应用的使用者角色可以根据其所涉及的业务进一步细分归类。常见的B端应用有OA系统、CRM系统、人事管理系统等。</p></blockquote></li></ul><h2 id="四、服务"><a href="#四、服务" class="headerlink" title="四、服务"></a>四、服务</h2><p>服务即是应用针对用户的使用场景提供的解决方案，满足用户需求，解决用户问题。不同用户群体的应用所提供服务也有所不同。<br>应用可以按照通用化服务、定制化服务进行区分：</p><ul><li><p><strong>通用应用</strong></p><blockquote><p>软件描述由开发者自己完成<a href="#index">[9]</a>，为用户提供通用化的服务。</p></blockquote></li><li><p><strong>定制应用</strong></p><blockquote><p>软件描述由客户给出，开发者必须按客户要求进行开发。</p></blockquote></li></ul><p>目前通用应用和定制应用的界限比较模糊，很多厂商从通用应用进行定制化处理，以满足特别用户的个性化要求<a href="#index">[9]</a>。</p><p>通用应用可以按照服务进行细分：</p><ul><li><strong>游戏类</strong></li><li><strong>平台类</strong></li><li><strong>内容类</strong></li><li><strong>社交类</strong></li><li><strong>工具类</strong><br>···<br>很多应用的服务是多种服务类型的复合，比如微信、QQ、网易云音乐等。</li></ul><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>综上可知应用可以通过多个维度进行划分，不同类型的应用具有的特点也不同。<br>以上是我对于应用分类的阐述，如有错误请指出，谢谢。</p><h2 id="六、参考资料"><a href="#六、参考资料" class="headerlink" title="六、参考资料"></a>六、参考资料</h2><p>[1] 谢希仁，《计算机网络（第六版）》<br>[2] <a href="https://www.cnblogs.com/zhoujg/archive/2009/11/18/1605268.html" target="_blank" rel="noopener">软件观点 - 平台分类：系统平台、开发平台、开放平台</a><br>[3] 关键词，百度百科<br>[4] <a href="https://blog.csdn.net/yuyanjing123456789/article/details/78689595" target="_blank" rel="noopener">五大主流浏览器及四大内核</a><br>[5] 关键词，维基百科<br>[6] <a href="https://www.cnblogs.com/doit8791/p/3475505.html" target="_blank" rel="noopener">国内主流开放平台接口了解</a><br>[7] 51CTO调研中心，国内主流开放平台发展状况与盈利模式分析报告<br>[8] <a href="https://app.3dmgame.com/news/17557.html" target="_blank" rel="noopener">《微信》小程序和APP有什么区别？小程序对于微信的意义</a><br>[9] Lan Sommerville，《软件工程（中文版）》</p>]]></content>
      
      
      <categories>
          
          <category> 产品管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网产品 </tag>
            
            <tag> 产品分类 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
